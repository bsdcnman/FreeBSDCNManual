.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)pipe.2	8.1 (Berkeley) 6/4/93
.\" $FreeBSD: src/lib/libc/sys/pipe.2,v 1.24.4.1 2011/09/23 00:51:37 kensmith Exp $
.\"
.Dd January 30, 2006
.Dt PIPE 2
.Os
.Sh NAME
.Nm pipe
.Nd 创建一对用于进程间通信的描述符
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn pipe "int fildes[2]"
.Sh DESCRIPTION
.Fn pipe
系统调用创建一个支持双向数据流的
.Em 管道(pipe) ,
并分配一对文件描述符.
.Pp
按照约定，第一个描述符通常用作管道的
.Em 读取端(read end) ,
第二个描述符则用作
.Em 写入端(write end) ,
因此写入
.Fa fildes[1]
的数据将会出现(读取)于
.Fa fildes[0] .
这样就能把一个程序的输出发送给另一个程序, 例如: 
数据源的标准输出可以建立
在管道的写入端, 
而数据宿的标准输入可以建立在管道的读取端. 管道本身将会持
续存在, 直到它所关联的全部描述符都被关闭.
.Pp
如果某个管道有一端已被关闭, 则可以认为它处于
.Em 半关闭(widowed)
状态. 进程对
这种管道进行写入，会收到
.Dv SIGPIPE
信号. 管道窗口是告诉读者文件已经到头的唯
一方式, 例如: 当读者消耗完所有缓冲的数据之后，读取一个半关闭的管道将返回
0个字节. 
.Pp
本管道的实现所具备的双向性，对于老的系统来说是不可移植的. 因此当使用管道
进行单向通信时，建议使用约定俗成的传统方式来操作端口. 
.Sh RETURN VALUES
.Rv -std pipe
.Sh ERRORS
如果遇到以下情形
.Fn pipe
系统调用将会失败: 
.Bl -tag -width Er
.It Bq Er EMFILE
活跃的文件描述符过多了. 
.It Bq Er ENFILE
系统文件表已经满了. 
.It Bq Er ENOMEM
没有足够的内核内存来建立管道.
.El
.Sh SEE ALSO
.Xr sh 1 ,
.Xr fork 2 ,
.Xr read 2 ,
.Xr socketpair 2 ,
.Xr write 2
.Sh HISTORY
.Fn pipe
函数始现于
.At v3 .
.Pp
双向管道首次用于
.At V.4 .
